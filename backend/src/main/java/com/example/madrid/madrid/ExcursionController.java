package com.example.madrid.madrid;

import java.math.BigDecimal;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@CrossOrigin(origins = {"http://localhost:3000", "http://localhost:3001"})
@Controller // This means that this class is a Controller
@RequestMapping(path="/excursions") // This means URL's start with /demo (after Application path)
public class ExcursionController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data
  private ExcursionRepository excursionRepository;

  @PostMapping(path="/add", consumes ="application/json") // Map ONLY POST Requests
  public @ResponseBody String addNewRestaurant(@RequestBody Excursion excursion) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request
    try{
      excursionRepository.save(excursion);
      return "Saved";
    } catch (Exception e){
      return "Failed to save restaurant: " + e.getMessage();
    }
    
  }

  @GetMapping(path="/all")
  public @ResponseBody Iterable<Excursion> getAllRestaurants() {
    // This returns a JSON or XML with the users
    return excursionRepository.findAll();
  }
}

